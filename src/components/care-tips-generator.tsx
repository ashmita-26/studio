'use client';

import { useState, useTransition } from 'react';
import { Button } from './ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { getCareTips } from '@/lib/actions';
import { Loader2, Sparkles } from 'lucide-react';
import { Alert, AlertDescription, AlertTitle } from './ui/alert';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from './ui/accordion';

interface CareTipsGeneratorProps {
  plantName: string;
  plantType: string;
  environment: 'indoor' | 'outdoor';
}

export default function CareTipsGenerator({ plantName, plantType, environment }: CareTipsGeneratorProps) {
  const [isPending, startTransition] = useTransition();
  const [tips, setTips] = useState<string | null>(null);
  const [error, setError] = useState<string | null>(null);

  const handleGenerateTips = () => {
    setError(null);
    setTips(null);
    startTransition(async () => {
      const result = await getCareTips({ plantName, plantType, environment });
      if (result.error) {
        setError(result.error);
      } else {
        setTips(result.careTips ?? null);
      }
    });
  };

  return (
    <Card className="bg-primary/10 border-primary/20">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 font-headline">
          <Sparkles className="text-accent" />
          AI Plant Care Assistant
        </CardTitle>
        <CardDescription>
          Get personalized care tips for your {plantName} generated by our AI expert.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Button onClick={handleGenerateTips} disabled={isPending} className="w-full bg-accent hover:bg-accent/90 text-accent-foreground">
          {isPending ? (
            <>
              <Loader2 className="mr-2 h-4 w-4 animate-spin" />
              Generating...
            </>
          ) : (
            'Generate Care Tips'
          )}
        </Button>
        
        {error && (
          <Alert variant="destructive" className="mt-4">
            <AlertTitle>Error</AlertTitle>
            <AlertDescription>{error}</AlertDescription>
          </Alert>
        )}

        {tips && (
            <div className="mt-4">
              <Accordion type="single" collapsible defaultValue="item-1">
                <AccordionItem value="item-1">
                  <AccordionTrigger className="font-semibold text-lg">View Your Care Tips</AccordionTrigger>
                  <AccordionContent>
                    <div className="prose prose-sm max-w-none text-foreground/90 whitespace-pre-wrap">
                      {tips}
                    </div>
                  </AccordionContent>
                </AccordionItem>
              </Accordion>
            </div>
        )}
      </CardContent>
    </Card>
  );
}
